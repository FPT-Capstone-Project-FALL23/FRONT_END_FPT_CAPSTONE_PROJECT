{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\FRONT_END_FPT_CAPSTONE_PROJECT\\\\tikseat\\\\src\\\\Components\\\\input\\\\InputCustom.jsx\",\n  _s = $RefreshSig$();\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputCustom = ({\n  type = \"text\",\n  label,\n  className,\n  setValue,\n  ...rest\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  if (type === \"password\") {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      fullWidth: true,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        required: true,\n        children: label || \"not label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-password\",\n        type: showPassword ? \"text\" : \"password\",\n        onChange: e => setValue(e.target.value),\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          variant: \"standard\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: () => setShowPassword(!showPassword)\n            // onMouseDown={handleMouseDownPassword}\n            ,\n            edge: \"end\",\n            children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this),\n        label: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    ...rest,\n    className: className,\n    style: {\n      marginBottom: \"20px\"\n    },\n    label: label || \"Not label\",\n    onChange: e => setValue(e.target.value),\n    placeholder: label,\n    fullWidth: true,\n    required: true,\n    type: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(InputCustom, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = InputCustom;\nexport default InputCustom;\nvar _c;\n$RefreshReg$(_c, \"InputCustom\");","map":{"version":3,"names":["Visibility","VisibilityOff","FormControl","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","React","useState","jsxDEV","_jsxDEV","InputCustom","type","label","className","setValue","rest","_s","showPassword","setShowPassword","variant","fullWidth","style","marginBottom","children","htmlFor","required","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","value","endAdornment","position","onClick","edge","placeholder","_c","$RefreshReg$"],"sources":["D:/Git/FRONT_END_FPT_CAPSTONE_PROJECT/tikseat/src/Components/input/InputCustom.jsx"],"sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nconst InputCustom = ({\n  type = \"text\",\n  label,\n  className,\n  setValue,\n  ...rest\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  if (type === \"password\") {\n    return (\n      <FormControl\n        variant=\"outlined\"\n        fullWidth\n        style={{ marginBottom: \"20px\" }}\n      >\n        <InputLabel htmlFor=\"outlined-adornment-password\" required>\n          {label || \"not label\"}\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={showPassword ? \"text\" : \"password\"}\n          onChange={(e) => setValue(e.target.value)}\n          endAdornment={\n            <InputAdornment position=\"end\" variant=\"standard\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={() => setShowPassword(!showPassword)}\n                // onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          }\n          label={label}\n        />\n      </FormControl>\n    );\n  }\n  return (\n    <TextField\n      {...rest}\n      className={className}\n      style={{ marginBottom: \"20px\" }}\n      label={label || \"Not label\"}\n      onChange={(e) => setValue(e.target.value)}\n      placeholder={label}\n      fullWidth\n      required\n      type={type}\n    />\n  );\n};\n\nexport default InputCustom;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAC/D,SACEC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,aAAa,EACbC,SAAS,QACJ,eAAe;AACtB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EACnBC,IAAI,GAAG,MAAM;EACbC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,IAAII,IAAI,KAAK,UAAU,EAAE;IACvB,oBACEF,OAAA,CAACT,WAAW;MACVmB,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAEhCd,OAAA,CAACN,UAAU;QAACqB,OAAO,EAAC,6BAA6B;QAACC,QAAQ;QAAAF,QAAA,EACvDX,KAAK,IAAI;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACbpB,OAAA,CAACL,aAAa;QACZ0B,EAAE,EAAC,6BAA6B;QAChCnB,IAAI,EAAEM,YAAY,GAAG,MAAM,GAAG,UAAW;QACzCc,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1CC,YAAY,eACV1B,OAAA,CAACP,cAAc;UAACkC,QAAQ,EAAC,KAAK;UAACjB,OAAO,EAAC,UAAU;UAAAI,QAAA,eAC/Cd,OAAA,CAACR,UAAU;YACT,cAAW,4BAA4B;YACvCoC,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAAC,CAACD,YAAY;YAC5C;YAAA;YACAqB,IAAI,EAAC,KAAK;YAAAf,QAAA,EAETN,YAAY,gBAAGR,OAAA,CAACV,aAAa;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGpB,OAAA,CAACX,UAAU;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACjB;QACDjB,KAAK,EAAEA;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAElB;EACA,oBACEpB,OAAA,CAACJ,SAAS;IAAA,GACJU,IAAI;IACRF,SAAS,EAAEA,SAAU;IACrBQ,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAChCV,KAAK,EAAEA,KAAK,IAAI,WAAY;IAC5BmB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAC1CK,WAAW,EAAE3B,KAAM;IACnBQ,SAAS;IACTK,QAAQ;IACRd,IAAI,EAAEA;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN,CAAC;AAACb,EAAA,CApDIN,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}